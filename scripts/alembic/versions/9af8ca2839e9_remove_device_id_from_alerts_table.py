"""Remove device_id from alerts table

Revision ID: 9af8ca2839e9
Revises: 
Create Date: 2025-07-03 09:32:47.302842

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9af8ca2839e9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('slices',
    sa.Column('id', sa.String(length=36), nullable=False, comment='Unique identifier for the slice (UUID)'),
    sa.Column('name', sa.String(length=100), nullable=False, comment='Human-readable name for the slice'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='Current status of the slice (active, inactive, maintenance)'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Timestamp when the slice was created'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='Timestamp when the slice was last updated'),
    sa.Column('max_throughput', sa.Float(), nullable=False, comment='Maximum throughput in Mbps'),
    sa.Column('max_latency', sa.Float(), nullable=False, comment='Maximum allowed latency in milliseconds'),
    sa.Column('max_devices', sa.Integer(), nullable=False, comment='Maximum number of devices allowed in this slice'),
    sa.Column('description', sa.Text(), nullable=True, comment='Optional description of the slice'),
    sa.Column('tags', sa.JSON(), nullable=True, comment='Key-value pairs for additional metadata'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_slices_id'), 'slices', ['id'], unique=False)
    op.create_index(op.f('ix_slices_name'), 'slices', ['name'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_users_created_at', 'users', ['created_at'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('alerts',
    sa.Column('id', sa.Integer(), nullable=False, comment='Unique identifier for the alert'),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Timestamp when the alert was generated'),
    sa.Column('level', sa.String(length=20), nullable=False, comment='Alert severity level (critical, warning, info)'),
    sa.Column('message', sa.Text(), nullable=False, comment='Detailed description of the alert'),
    sa.Column('resolved', sa.Boolean(), nullable=False, comment='Whether the alert has been resolved'),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True, comment='Timestamp when the alert was resolved'),
    sa.Column('entity_type', sa.String(length=20), nullable=False, comment='Type of entity this alert is about (slice, device, system, network)'),
    sa.Column('entity_id', sa.String(length=36), nullable=False, comment='ID of the related entity'),
    sa.Column('owner_id', sa.Integer(), nullable=True, comment='User who owns or is responsible for this alert'),
    sa.Column('context', sa.JSON(), nullable=True, comment='Additional context or metadata for the alert in JSON format'),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_alerts_id'), 'alerts', ['id'], unique=False)
    op.create_index(op.f('ix_alerts_owner_id'), 'alerts', ['owner_id'], unique=False)
    op.create_index(op.f('ix_alerts_timestamp'), 'alerts', ['timestamp'], unique=False)
    op.create_table('devices',
    sa.Column('id', sa.String(length=36), nullable=False, comment='Unique identifier for the device (UUID)'),
    sa.Column('name', sa.String(length=100), nullable=False, comment='Human-readable name for the device'),
    sa.Column('type', sa.String(length=20), nullable=False, comment='Type of device (e.g., UE, gNB, UPF, SMF, AMF)'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='Current status of the device (connected, disconnected, error, maintenance)'),
    sa.Column('ip_address', sa.String(length=45), nullable=True, comment='Current IP address of the device'),
    sa.Column('mac_address', sa.String(length=17), nullable=True, comment='MAC address of the device'),
    sa.Column('last_seen', sa.DateTime(timezone=True), nullable=True, comment='Timestamp when the device was last seen online'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Timestamp when the device was registered'),
    sa.Column('slice_id', sa.String(length=36), nullable=True, comment='Reference to the slice this device belongs to'),
    sa.Column('owner_id', sa.Integer(), nullable=True, comment='Reference to the user who owns this device'),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['slice_id'], ['slices.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_devices_id'), 'devices', ['id'], unique=False)
    op.create_index(op.f('ix_devices_name'), 'devices', ['name'], unique=False)
    op.create_index(op.f('ix_devices_owner_id'), 'devices', ['owner_id'], unique=False)
    op.create_index(op.f('ix_devices_slice_id'), 'devices', ['slice_id'], unique=False)
    op.create_table('slice_kpis',
    sa.Column('id', sa.Integer(), nullable=False, comment='Unique identifier for the KPI record'),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False, comment='Timestamp when the KPI was recorded'),
    sa.Column('latency', sa.Float(), nullable=True, comment='Average latency in milliseconds'),
    sa.Column('throughput', sa.Float(), nullable=True, comment='Average throughput in Mbps'),
    sa.Column('connected_devices', sa.Integer(), nullable=False, comment='Number of connected devices'),
    sa.Column('packet_loss', sa.Float(), nullable=True, comment='Average packet loss percentage (0-100)'),
    sa.Column('availability', sa.Float(), nullable=True, comment='Slice availability percentage (0-100)'),
    sa.Column('slice_id', sa.String(length=36), nullable=False, comment='Reference to the associated network slice'),
    sa.Column('kpi_metadata', sa.JSON(), nullable=True, comment='Additional KPI data in JSON format'),
    sa.ForeignKeyConstraint(['slice_id'], ['slices.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_slice_kpis_id'), 'slice_kpis', ['id'], unique=False)
    op.create_index(op.f('ix_slice_kpis_slice_id'), 'slice_kpis', ['slice_id'], unique=False)
    op.create_index(op.f('ix_slice_kpis_timestamp'), 'slice_kpis', ['timestamp'], unique=False)
    op.create_table('metrics',
    sa.Column('id', sa.Integer(), nullable=False, comment='Unique identifier for the metric record'),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Timestamp when the metric was recorded'),
    sa.Column('throughput', sa.Float(), nullable=True, comment='Network throughput in Mbps (Megabits per second)'),
    sa.Column('latency', sa.Float(), nullable=True, comment='Network latency in milliseconds'),
    sa.Column('packet_loss', sa.Float(), nullable=True, comment='Packet loss percentage (0-100)'),
    sa.Column('cpu_usage', sa.Float(), nullable=True, comment='CPU utilization percentage (0-100)'),
    sa.Column('memory_usage', sa.Float(), nullable=True, comment='Memory utilization percentage (0-100)'),
    sa.Column('slice_id', sa.String(length=36), nullable=True, comment='Reference to the associated network slice'),
    sa.Column('device_id', sa.String(length=36), nullable=True, comment='Reference to the associated device'),
    sa.Column('metrics_metadata', sa.JSON(), nullable=True, comment='Additional metrics or tags in JSON format'),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['slice_id'], ['slices.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_metrics_device_id'), 'metrics', ['device_id'], unique=False)
    op.create_index(op.f('ix_metrics_id'), 'metrics', ['id'], unique=False)
    op.create_index(op.f('ix_metrics_slice_id'), 'metrics', ['slice_id'], unique=False)
    op.create_index(op.f('ix_metrics_timestamp'), 'metrics', ['timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_metrics_timestamp'), table_name='metrics')
    op.drop_index(op.f('ix_metrics_slice_id'), table_name='metrics')
    op.drop_index(op.f('ix_metrics_id'), table_name='metrics')
    op.drop_index(op.f('ix_metrics_device_id'), table_name='metrics')
    op.drop_table('metrics')
    op.drop_index(op.f('ix_slice_kpis_timestamp'), table_name='slice_kpis')
    op.drop_index(op.f('ix_slice_kpis_slice_id'), table_name='slice_kpis')
    op.drop_index(op.f('ix_slice_kpis_id'), table_name='slice_kpis')
    op.drop_table('slice_kpis')
    op.drop_index(op.f('ix_devices_slice_id'), table_name='devices')
    op.drop_index(op.f('ix_devices_owner_id'), table_name='devices')
    op.drop_index(op.f('ix_devices_name'), table_name='devices')
    op.drop_index(op.f('ix_devices_id'), table_name='devices')
    op.drop_table('devices')
    op.drop_index(op.f('ix_alerts_timestamp'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_owner_id'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_id'), table_name='alerts')
    op.drop_table('alerts')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_created_at', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_slices_name'), table_name='slices')
    op.drop_index(op.f('ix_slices_id'), table_name='slices')
    op.drop_table('slices')
    # ### end Alembic commands ###
